
@baseUrl = http://localhost:3000

@contentType = application/json


### Get All Tasks
# @name getAllTasks
GET {{baseUrl}}/tasks


### Get All IN_PROGRESS Tasks
# @name getInProgressTasks
GET {{baseUrl}}/tasks?status=IN_PROGRESS


### Get Pagination Tasks
# @name getPaginationTasks
GET {{baseUrl}}/tasks?offset=0&limit=4

### Get Java Tasks
### 采用 Repository 自带的方式，使用受限，title 和 description 必须同时满足条件才能够被返回；
# @name getJavaTasks
GET {{baseUrl}}/tasks?search=Java


### Get Java Tasks
### 采用 Query Builder 的方式，title ， description 满足一个即可；
# @name getReactJSTasks
GET {{baseUrl}}/tasks?search=ReactJS


### Get Tasks by filtering labels
# @name getTasksByLabels
GET {{baseUrl}}/tasks?labels=urgent,bug


### Get Tasks and sort order
# @name getTasksBySortOrder
GET {{baseUrl}}/tasks?sortBy=status&sortOrder=DESC&offset=0


### Create New Task
# @name createOneTask
POST {{baseUrl}}/tasks
Content-Type: {{contentType}}

{
  "title": "Learn NestJS",
  "description": "Complete the NestJS course",
  "status": "OPEN",
  "userId": "a3bd91d1-b29a-455b-844e-016db83fe46d",
	"labels": [{
		"name": "normal"
	}]
}

### Set Task ID
@taskId = {{createOneTask.response.body.id}}

### Get One Task
# @name getOneTask
GET {{baseUrl}}/tasks/{{taskId}}

### update task status
PATCH {{baseUrl}}/tasks/{{taskId}}
Content-Type:  {{contentType}}

{
	"status": "IN_PROGRESS",
	"labels": [{
		"name": "done"
	}]
}

### delete one task
DELETE {{baseUrl}}/tasks/{{taskId}}

### add specific labels to tasks
# @name addLabels
POST {{baseUrl}}/tasks/{{taskId}}/labels
Content-Type: {{contentType}}

[
	{"name": "prioritized"},
	{"name": "bug"}
]

### remove specific labels from taks
# @name removeLabels
DELETE {{baseUrl}}/tasks/{{taskId}}/labels
Content-Type: {{contentType}}

["prioritized", "bug"]